import java.util.Scanner;

/**
 * Задание 3. Калькулятор на 4 действия и Поиск максимального элемента в массиве
 *
 * @author Irina Miklyaeva
 * @see #AddMethod(float, float)  Метод для сложения двух дробных чисел
 * @see #SubMethod(float, float)  Метод для вычитания второго дробного числа из первого
 * @see #DevMethod(float, float)  Метод для деления первого дробного числа на второе
 * @see #MultMethod(float, float) Метод для умножения первого дробного числа на второе
 * @see #FindMethod(String[], int) Метод для поиска максимального элемента в массиве
 */
public class Base {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);// Новый объект Scanner
        System.out.println("Выберите программу:\n'1'- Калькулятор;\n'2'- Поиск максимального элемента в массиве");// Ввод из консоли выбора программы для запуска
        int p = scanner.nextInt();
        switch (p) {
            case 1:// Если пользователь ввел 1, то вызываем программу Калькулятор
                System.out.println("Калькулятор.Введите первое дробное число(разделитель ,) :");// Ввод из консоли первого дробного числа
                float i = scanner.nextFloat();
                System.out.println("Калькулятор.Введите второе дробное число(разделитель ,) :");// Ввод из консоли второго дробного числа
                float j = scanner.nextFloat();
                System.out.println("Введите один из предложенных знаков действия:\n'+'сложить;\n'-'вычесть второе число из первого;\n'/'- разделить первое число на второе;\n'*'- умножить;");// Ввод из консоли выбора действия калькулятора
                String f = scanner.next();
                if ("+".equals(f)) {//Если ввели '+'
                    float addition = AddMethod(i, j);// вызываем метод для сложения двух дробных чисел и передаем  результат
                    System.out.printf("Сумма чисел=%.4f ", addition);// Вывод Итога сложения двух дробных чисел с точностью до 4 знаков после запятой
                } else if ("-".equals(f)) {// Eсли ввели '-'
                    float substraction = SubMethod(i, j);//вызываем метод для вычитания второго дробного числа из первого и передачи в substraction результата
                    System.out.printf("Разница чисел=%.4f ", substraction);// Вывод Итога вычитания двух дробных чисел с точностью до 4 знаков после запятой
                } else if ("/".equals(f)) {// Если ввели '/'
                    float division = DevMethod(i, j);// вызываем метод для деления первого дробного числа на второе и передаем результат
                    System.out.printf("Результат деления чисел=%.4f ", division);// Вывод Итога деления первого дробного числа на второе с точностью до 4 знаков после запятой
                } else if ("*".equals(f)) {//Tсли ввели '*'
                    float multiplication = MultMethod(i, j);// вызываем метод для умножения первого дробного числа на второе и передаем результат
                    System.out.printf("Результат перемножения чисел=%.4f ", multiplication);// Вывод Итога умножения первого дробного числа на второе с точностью до 4 знаков после запятой
                } else System.out.println("Введен неверный знак действия");// Вывод ошибки в консоль
                scanner.close();// закрываем сканер
                break;
            case 2: // Если пользователь ввел 2, то вызываем программу Поиск максимального элемента в массиве
                System.out.println("Укажите длину массива (целое число):");// Ввод из консоли длины массива
                int d = scanner.nextInt();
                String array[] = new String[d];// Объявляем массив длинной введенной пользователем
                for (int k = 0; k < d; k++) {// заполняем массив словами, введенными пользователем
                    System.out.println("Введите слово массива:");
                    array[k] = scanner.next();
                }
                System.out.print("Самое длинное слово:");// Выводим в консоль текст самое длинное слово
                System.out.print(FindMethod(array,d));// Выводим слово, найденное методом поиска максимального элемента
                break;
            default:
                System.out.println("Введен неверный номер программы, попробуйте еще раз и введите 1 или 2");// Вывод ошибки пользователю о неверном выборе программы
        }
    }

    /**
     * Метод для сложения двух дробных чисел
     *
     * @param i первое введенное число
     * @param j второе введенное число
     * @return Результат сложения двух дробных чисел
     */
    private static float AddMethod(float i, float j) {
        float sum; // обяъявляем переменную sum
        sum = i + j;// выполнякм сложение полученных на вход переменных
        return sum;
    }// Возвращаем на выход результат сложения

    /**
     * Метод для вычитания второго дробного числа из первого
     *
     * @param i первое введенное число
     * @param j второе введенное число
     * @return Разница двух чисел
     */
    private static float SubMethod(float i, float j) {
        return (i - j);// находим разницу
    }// Возвращаем на выход результат вычитания второго числа из первого

    /**
     * Метод для деления первого дробного числа на второе
     *
     * @param i первое введенное число
     * @param j второе введенное число
     * @return Результат деления первого числа на второе
     */
    private static float DevMethod(float i, float j) {
        return (i / j);// выполняем деление
    }// Возвращаем на выход результат деления первого числа на второе

    /**
     * Метод для умножения первого дробного числа на второе
     *
     * @param i первое введенное число
     * @param j второе введенное число
     * @return Результат умножения первого числа на второе
     */
    private static float MultMethod(float i, float j) {
        return (i * j);// выполняем умножение
    }// Возвращаем на выход результат умножения первого числа на второе
    /**
     * Метод для поиска максимального элемента в массиве
     *
     * @param arr Массив слов
     * @param d Длина массива
     * @return Максимальный элемент массива
     */
    private static String FindMethod( String arr[],int d) {
    int maxlen = 0;// объявляем переменную для максимальной длины
    int index = 0; // объявляем переменную для хранения позиции массива, где находится слово максимальной длины
                for (int h = 0; h < d; h++) {
                    int len = arr[h].length();// объявляем переменную для записи длины слова
                    if (len > maxlen) {// Если длина текущего слова массива больше текущего максимального, то обновляем значение максимума
                        maxlen = len;
                        index = h;
                    }
                }
        return arr[index];
    }
}

